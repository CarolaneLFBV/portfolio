name: Deploy Portfolio

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Étape 1 : Cloner le dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # ✅ Étape 2 : Créer un fichier .env temporaire pour le build
      - name: Create .env file
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "BACKOFFICE_PORT=${{ secrets.BACKOFFICE_PORT }}" >> .env
          echo "CLIENT_PORT=${{ secrets.CLIENT_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      # ✅ Étape 3 : Configurer Docker Buildx pour le build multi-plateforme
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # ✅ Étape 4 : Se connecter à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # ✅ Étape 5 : Build et push des images Docker
      - name: Build and push Docker images
        run: |
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml push

      # ✅ Étape 6 : Déploiement sur le VPS via SSH
      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key $VPS_USER@$VPS_HOST << 'EOF'
          cd /var/www/carolanelefebvre.com
          docker compose pull
          docker compose up -d --remove-orphans
          docker system prune -f
          EOF