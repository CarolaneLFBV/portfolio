volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: ${DATABASE_HOST}
  DATABASE_PORT: ${DATABASE_PORT}
  DATABASE_NAME: ${DATABASE_NAME} 
  DATABASE_USERNAME: ${DATABASE_USERNAME}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  BACKOFFICE_PORT: ${BACKOFFICE_PORT}
  CLIENT_PORT: ${CLIENT_PORT}
  JWT_SECRET: ${JWT_SECRET}
  
services:
  app:
    image: clfbv/portfolio-backend:latest
    build:
      context: ./portfolio-backend
      dockerfile: Dockerfile
    environment:
      <<: *shared_environment
    depends_on:
      - db
    ports:
      - '8080:8080'
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]

  migrate:
    image: clfbv/portfolio-backend:latest
    build:
      context: ./portfolio-backend
      dockerfile: Dockerfile
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0

  revert:
    image: clfbv/portfolio-backend:latest
    build:
      context: ./portfolio-backend
      dockerfile: Dockerfile
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0

  db:
    image: postgres:16-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'

  backoffice:
    image: clfbv/portfolio-backoffice:latest
    build:
      context: ./portfolio-backoffice
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '${BACKOFFICE_PORT}:80'
    depends_on:
      - db

  client:
    image: clfbv/portfolio-client:latest
    build:
      context: ./portfolio-client
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '${CLIENT_PORT}:80'
    depends_on:
      - db
